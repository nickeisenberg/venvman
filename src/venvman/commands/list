#!/usr/bin/env bash


err_missing_option_value() {
    ${VENVMAN_UTILS_DIR}/messages/err_missing_option_value "$@"
}


err_invalid_option() {
    ${VENVMAN_UTILS_DIR}/messages/err_invalid_option "$@"
}


venvman_command_help_tag() {
    ${VENVMAN_UTILS_DIR}/messages/venvman_command_help_tag "$@"
}

list_local_python_versions() {
    version_options_make=($("${VENVMAN_UTILS_DIR}/list_local_python_versions"))
    version_options_make="${version_options_make[@]}"
    echo $version_options_make
}

get_subversion_from_version() {
    ${VENVMAN_UTILS_DIR}/get_subversion_from_version "$@"
}


venvman_list() {
    while [ "$#" -gt 0 ]; do
        case $1 in
            -v | --version)
                if [ -n "$2" ]; then
                    VERSION="$2"
                    VENV_PATH="${VENVMAN_ENVS_DIR}/${VERSION}"
                    shift 2
                else
                    err_missing_option_value "list" "--version"
                    return 1
                fi
                ;;
            -h | --help)
                venvman_command_help_tag "list" \
                    --options \
                        "-v, --version <python_version>" \
                        "-h, --help" \
                    --option-descriptions \
                        "List virtual environments for a specific Python version." \
                        "Display this help message." \
                    --examples \
                        "venvman list -v 3.10" \
                    --example-descriptions \
                        "List virtual environments created with Python 3.10."
                shift
                return 0
                ;;
            *)
                err_invalid_option "list" "$1"
                return 1
                ;;
        esac
    done
    
    echo "--------------------------------------------------"
    echo "Available Virtual Enviornments for ..."
    echo "--------------------------------------------------"
    echo
    if [ -n "$VERSION" ]; then
        echo "Python ${VERSION}:"
        ls "$VENV_PATH" || return 1
        echo

    else
        for VERSION in $(find "$VENVMAN_ENVS_DIR" -mindepth 1 -maxdepth 1 -type d -exec basename {} \; | sort -t. -k1,1n -k2,2n); do
            echo "Python $VERSION:"
            ls "${VENVMAN_ENVS_DIR}/${VERSION}" || return 1
            echo
        done
    fi

    echo "--------------------------------------------------"
    echo "Local Versions of Python Found"
    echo "--------------------------------------------------"
    echo
    for VAR in $(list_local_python_versions); do
        bin=$(which "python${VAR}" 2>/dev/null)
        if [ -n "$bin" ] && [ "$VENVMAN_ROOT_DIR" != *"$bin"* ]; then
            echo $bin
        else
            MAJOR=$(get_subversion_from_version --major $VAR)
            MINOR=$(get_subversion_from_version --minor $VAR)
            bin=$(find "${VENVMAN_PYTHON_BUILDS_DIR}/${VAR}" -type f -executable -name "python${MAJOR}.${MINOR}")
            echo $bin
        fi
    done
    echo
}


venvman_list "$@"
